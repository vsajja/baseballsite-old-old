/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.generated.tables.MlbTeam;
import jooq.generated.tables.records.MlbTeamRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MlbTeamDao extends DAOImpl<MlbTeamRecord, jooq.generated.tables.pojos.MlbTeam, Integer> {

    /**
     * Create a new MlbTeamDao without any configuration
     */
    public MlbTeamDao() {
        super(MlbTeam.MLB_TEAM, jooq.generated.tables.pojos.MlbTeam.class);
    }

    /**
     * Create a new MlbTeamDao with an attached configuration
     */
    public MlbTeamDao(Configuration configuration) {
        super(MlbTeam.MLB_TEAM, jooq.generated.tables.pojos.MlbTeam.class, configuration);
    }

    @Override
    public Integer getId(jooq.generated.tables.pojos.MlbTeam object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchById(Integer... values) {
        return fetch(MlbTeam.MLB_TEAM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.generated.tables.pojos.MlbTeam fetchOneById(Integer value) {
        return fetchOne(MlbTeam.MLB_TEAM.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByName(String... values) {
        return fetch(MlbTeam.MLB_TEAM.NAME, values);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByCode(String... values) {
        return fetch(MlbTeam.MLB_TEAM.CODE, values);
    }

    /**
     * Fetch records that have <code>division BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfDivision(String lowerInclusive, String upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.DIVISION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>division IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByDivision(String... values) {
        return fetch(MlbTeam.MLB_TEAM.DIVISION, values);
    }

    /**
     * Fetch records that have <code>league BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfLeague(String lowerInclusive, String upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.LEAGUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>league IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByLeague(String... values) {
        return fetch(MlbTeam.MLB_TEAM.LEAGUE, values);
    }

    /**
     * Fetch records that have <code>level BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfLevel(String lowerInclusive, String upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>level IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByLevel(String... values) {
        return fetch(MlbTeam.MLB_TEAM.LEVEL, values);
    }

    /**
     * Fetch records that have <code>first_year_of_play BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfFirstYearOfPlay(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.FIRST_YEAR_OF_PLAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_year_of_play IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByFirstYearOfPlay(Integer... values) {
        return fetch(MlbTeam.MLB_TEAM.FIRST_YEAR_OF_PLAY, values);
    }

    /**
     * Fetch records that have <code>division_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfDivisionId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.DIVISION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>division_id IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByDivisionId(Integer... values) {
        return fetch(MlbTeam.MLB_TEAM.DIVISION_ID, values);
    }

    /**
     * Fetch records that have <code>league_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfLeagueId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.LEAGUE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>league_id IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByLeagueId(Integer... values) {
        return fetch(MlbTeam.MLB_TEAM.LEAGUE_ID, values);
    }

    /**
     * Fetch records that have <code>team_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchRangeOfTeamId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MlbTeam.MLB_TEAM.TEAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>team_id IN (values)</code>
     */
    public List<jooq.generated.tables.pojos.MlbTeam> fetchByTeamId(Integer... values) {
        return fetch(MlbTeam.MLB_TEAM.TEAM_ID, values);
    }
}
